name: Build Windows wheels (PR merge to main)

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  wheel:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64]
    steps:
      - name: Check out merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.arch }}

      - name: Install pkg-config (Chocolatey)
        run: choco install -y pkgconfiglite

      - name: Build zlib-ng
        run: |
          git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
          cmake -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -B zlib-ng-build zlib-ng -DZLIB_COMPAT=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\deps\zlib-ng
          cmake --build zlib-ng-build --config Release --target install

      - name: Build minizip-ng (with zlib-ng)
        run: |
          git clone --depth 1 https://github.com/zlib-ng/minizip-ng.git
          cmake -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -B minizip-build minizip-ng -DMZ_FETCH_LIBS=OFF -DMZ_ZLIB=ON -DMZ_ZLIB_FLAVOR=zlib-ng -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\deps\minizip -DZLIB_LIBRARY=C:\deps\zlib-ng\lib\zlib.lib -DZLIB_INCLUDE_DIR=C:\deps\zlib-ng\include
          cmake --build minizip-build --config Release --target install

      - name: Build libxml2 (without iconv, with zlib-ng)
        run: |
          git clone --depth 1 https://github.com/GNOME/libxml2.git
          cmake -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -B libxml2-build libxml2 -DLIBXML2_WITH_ICONV=OFF -DLIBXML2_WITH_ZLIB=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\deps\libxml2 -DZLIB_LIBRARY=C:\deps\zlib-ng\lib\zlibstatic.lib -DZLIB_INCLUDE_DIR=C:\deps\zlib-ng\include
          cmake --build libxml2-build --config Release --target install

      - name: Install pybind11 from source
        run: |
          git clone --depth 1 https://github.com/pybind/pybind11.git
          cmake -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -B pybind11-build pybind11 -DPYBIND11_INSTALL=ON -DPYBIND11_TEST=OFF -DCMAKE_INSTALL_PREFIX=C:\deps\pybind11
          cmake --build pybind11-build --config Release --target install

      - name: Install Python build dependencies
        run: |
          python -m pip install -U pip build scikit-build-core

      - name: Build wheel
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: "4"
        run: |
          python -m build -w `
            --config-setting=cmake.define.CMAKE_PREFIX_PATH="C:/deps/zlib-ng;C:/deps/minizip;C:/deps/libxml2;C:/deps/pybind11"

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-${{ matrix.arch }}
          path: dist/*.whl

  publish:
    needs: wheel
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release-assets:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v0.1.36
          name: v0.1.36
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

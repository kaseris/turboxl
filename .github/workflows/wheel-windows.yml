name: Build Windows wheels (PR merge to main)

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  wheel-windows:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: windows-2022
    steps:
      - name: Check out merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up Python (for cibuildwheel runner)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: |
          python -m pip install -U pip cibuildwheel

      - name: Normalize workspace path (POSIX style)
        id: paths
        shell: pwsh
        run: |
          $p = "${{ github.workspace }}".Replace('\\','/')
          echo "workspace_posix=$p" >> $env:GITHUB_OUTPUT

      - name: Cache vcpkg build artifacts
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/installed
            vcpkg/buildtrees
            vcpkg/packages
            vcpkg/downloads
          key: vcpkg-${{ runner.os }}-x64-windows-static-md-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: vcpkg-${{ runner.os }}-x64-windows-static-md-

      - name: Build Windows wheels with cibuildwheel
        env:
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_SKIP: "pp*"
          CIBW_BEFORE_BUILD_WINDOWS: |
            choco install -y git
            if not exist %GITHUB_WORKSPACE%\vcpkg (
              git clone https://github.com/microsoft/vcpkg %GITHUB_WORKSPACE%\vcpkg
              %GITHUB_WORKSPACE%\vcpkg\bootstrap-vcpkg.bat -disableMetrics
            )

            set VCPKG_TRIPLET=x64-windows-static-md
            %GITHUB_WORKSPACE%\vcpkg\vcpkg.exe install ^
              zlib:%VCPKG_TRIPLET% ^
              liblzma:%VCPKG_TRIPLET% ^
              libiconv:%VCPKG_TRIPLET% ^
              libxml2[iconv,lzma,zlib]:%VCPKG_TRIPLET% ^
              minizip-ng[zlib]:%VCPKG_TRIPLET%

            python -m pip install -U pip cmake ninja build scikit-build-core pybind11
          CIBW_ENVIRONMENT_WINDOWS: >
            VCPKG_ROOT=${{ steps.paths.outputs.workspace_posix }}/vcpkg
            VCPKG_DEFAULT_TRIPLET=x64-windows-static-md
            VCPKG_TARGET_TRIPLET=x64-windows-static-md
            CMAKE_ARGS=-DCMAKE_TOOLCHAIN_FILE=${{ steps.paths.outputs.workspace_posix }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_FIND_PACKAGE_PREFER_CONFIG=ON
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: wheelhouse/*.whl

  publish:
    needs: wheel-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release-assets:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows
          path: dist

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v0.1.26
          name: v0.1.26
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

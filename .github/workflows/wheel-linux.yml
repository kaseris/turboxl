name: Build Linux wheels (PR merge to main)

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  wheel-linux:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-22.04
    steps:
      - name: Check out merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up QEMU (for aarch64)
        uses: docker/setup-qemu-action@v3

      - name: Set up Python (for cibuildwheel runner)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: |
          python -m pip install -U pip cibuildwheel

      - name: Build Linux wheels with cibuildwheel
        env:
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_SKIP: "pp* *-musllinux_*"
          CIBW_ENVIRONMENT: "CMAKE_BUILD_PARALLEL_LEVEL=4"
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y gcc gcc-c++ make cmake pkgconfig libxml2-devel zlib-devel libzip-devel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: wheelhouse/*.whl

  publish:
    needs: wheel-linux
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels-linux
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release-assets:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-linux
          path: dist

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v0.1.4
          name: v0.1.4
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
